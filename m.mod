#MULTICOMODITY

set K;  #Commoditys

set O; #Origins
set D; #Destinations

set N:= O union D; #Nodes
set A, within N cross N; #Arcs of Network

###########################################

param oik{i in O, k in K}; #Supply per commodity
param dik{i in D, k in K}; #Demand per commodity

param ug{(i,j) in A}; #capacity per arc
param uk{(i,j) in A, k in K}; #capacity per arc (per commodity)

param c{(i,j) in A, k in K}; #cost per commodity (per arc)

param cx{(i,j) in A, k in K}; #Constant cost per commodity (per arc)
###########################################

var x{(i,j) in A, k in K} >= 0, integer;

###########################################
###########################################

minimize Z: sum{(i,j) in A, k in K} c[i,j,k]*x[i,j,k];

s.t. R1{k in K, i in O}: sum{j in N}x[i,j,k] - sum{j in N}x[j,i,k] = oik[i,k];

s.t. R2{k in K, i in D}: sum{j in N}x[i,j,k] - sum{j in N}x[j,i,k] = -1*dik[i,k];

s.t. R3{(i,j) in A, k in K}: x[i,j,k] <= uk[i,j,k];

s.t. R4{(i,j) in A}: sum{k in K}x[i,j,k] <= ug[i,j];

s.t. R5{(i,j) in A, k in K}: x[i,j,k] >= 0;

solve;

###########################################
###########################################

for {k in K}{
  printf "Transport cost: %s\n", sum{(i,j) in A} c[i,j,k]*x[i,j,k];
  printf "\n";
  printf "Origins     Destinies           Quantity      Constant \n";
  for {i in N} {
     for {j in N} {
        printf " %3s %15s %15s % 27s \n",i,j, x[i,j,k], cx[i,j,k]*x[i,j,k];
     }
  }
}

###########################################
###########################################

data;

set K:= 'K_1', 'K_2';

set O:= 'O_1', 'O_2';
set D:= 'D_1', 'D_2', 'D_3';
set T:= 'T_1';
set A:= 
  ('O_1', 'O_1'),
  ('O_2', 'O_1'),
  ('T_1', 'O_1'),
  ('D_1', 'O_1'),
  ('D_2', 'O_1'),
  ('D_3', 'O_1'),
  ('O_1', 'O_2'),
  ('O_2', 'O_2'),
  ('T_1', 'O_2'),
  ('D_1', 'O_2'),
  ('D_2', 'O_2'),
  ('D_3', 'O_2'),
  ('O_1', 'T_1'),
  ('O_2', 'T_1'),
  ('T_1', 'T_1'),
  ('D_1', 'T_1'),
  ('D_2', 'T_1'),
  ('D_3', 'T_1'),
  ('O_1', 'D_1'),
  ('O_2', 'D_1'),
  ('T_1', 'D_1'),
  ('D_1', 'D_1'),
  ('D_2', 'D_1'),
  ('D_3', 'D_1'),
  ('O_1', 'D_2'),
  ('O_2', 'D_2'),
  ('T_1', 'D_2'),
  ('D_1', 'D_2'),
  ('D_2', 'D_2'),
  ('D_3', 'D_2'),
  ('O_1', 'D_3'),
  ('O_2', 'D_3'),
  ('T_1', 'D_3'),
  ('D_1', 'D_3'),
  ('D_2', 'D_3'),
  ('D_3', 'D_3');

param oik:  'K_1'   'K_2' :=
      'O_1'  1000   0
      'O_2'  0      2000;

param dik:  'K_1' 'K_2' :=
      'D_1'   100    200
      'D_2'   0     1600
      'D_3'   1000    0;

param ug :=
[*,*]: 'O_1' 'O_2' 'T_1' 'D_1' 'D_2' 'D_3' :=
'O_1'   0     0     150   150   150   150
'O_2'   0     0     150   150   150   150
'T_1'   150   150   0     150   150   150
'D_1'   150   150   150   0     0     0
'D_2'   150   150   150   0     0     0
'D_3'   150   150   150   0     0     0;

param uk :=
[*,*, K_1] : 'O_1'  'O_2' 'T_1' 'D_1' 'D_2' 'D_3' := 

    'O_1'     0     0     40    40    40    40
    'O_2'     0     0     100   100   100   100
    'T_1'     100   100   0     50    50    50
    'D_1'     50    50    50    0     0     0
    'D_2'     125   125   125   0     0     0
    'D_3'     50    50    50    0     0     0

[*,*, K_2] : 'O_1' 'O_2' 'T_1'  'D_1' 'D_2' 'D_3' := 

    'O_1'     0    0      110   110   110   110
    'O_2'     0    0      50    50    50    50
    'T_1'     50   50     0     100   100   100
    'D_1'     100  100    100   0     0     0
    'D_2'     25   25     25    0     0     0
    'D_3'     100  100    100   0     0     0;


param c :=
[*,*, K_1] : 'O_1'  'O_2' 'T_1' 'D_1' 'D_2' 'D_3' := 

    'O_1'    9999   9999  18    15    15    15   
    'O_2'    9999   9999  12    12    12    12   
    'T_1'    10     10    9999  16    16    16   
    'D_1'    15     15    15    9999  9999  9999    
    'D_2'    12     12    12    9999  9999  9999   
    'D_3'    16     16    16    9999  9999  9999

[*,*, K_2] : 'O_1'  'O_2' 'T_1' 'D_1' 'D_2' 'D_3' := 

    'O_1'    9999   9999  18    15    15    15   
    'O_2'    9999   9999  12    12    12    12   
    'T_1'    10     10    9999  16    16    16   
    'D_1'    15     15    15    9999  9999  9999    
    'D_2'    12     12    12    9999  9999  9999   
    'D_3'    16     16    16    9999  9999  9999;


param cx :=
[*,*, K_1] : 'O_1'  'O_2' 'T_1' 'D_1' 'D_2' 'D_3' := 

    'O_1'    9999   9999  18    15    15    15   
    'O_2'    9999   9999  12    12    12    12   
    'T_1'    10     10    9999  16    16    16   
    'D_1'    15     15    15    9999  9999  9999    
    'D_2'    12     12    12    9999  9999  9999   
    'D_3'    16     16    16    9999  9999  9999

[*,*, K_2] : 'O_1'  'O_2' 'T_1' 'D_1' 'D_2' 'D_3' := 

    'O_1'    9999   9999  18    15    15    15   
    'O_2'    9999   9999  12    12    12    12   
    'T_1'    10     10    9999  16    16    16   
    'D_1'    15     15    15    9999  9999  9999    
    'D_2'    12     12    12    9999  9999  9999   
    'D_3'    16     16    16    9999  9999  9999;

###########################################
###########################################

end;